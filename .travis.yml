language: python

#cache: pip

python:
#  - "2.6"
#  - "2.7"
#  - "3.2"
#  - "3.3"
#  - "3.4"
  - "3.5"
#  - "3.5-dev" # 3.5 development branch
  - "3.6"
#  - "3.6-dev" # 3.6 development branch
#  - "3.7-dev" # 3.7 development branch
#  - "nightly" # currently points to 3.7-dev
# PyPy versions
#  - "pypy"  # PyPy2 2.5.0
#  - "pypy3" # Pypy3 2.4.0
#  - "pypy-5.3.1"
#

env:
  global:
  - GH_REF: git@github.com:smarie/python-object-as-daemon.git

before_install:
  - sudo apt-get install pandoc
  - sudo apt-get install ant
  - sudo apt-get install ant-optional  # for junitreports

install:
  - pip install -r ci_tools/requirements-setup.txt
  - pip install -r ci_tools/requirements-test.txt
  - pip install -r ci_tools/requirements-report.txt
  - pip install -r ci_tools/requirements-doc.txt
  - pip install codecov    # https://github.com/codecov/example-python. This is specific to travis integration
# - pip install coveralls  # this is an alternative to codecov
  - pip install .

script:
#  - coverage run tests.py
  - pytest --junitxml=reports/junit/junit.xml --html=reports/junit/report.html --cov-report term-missing --cov=./pyoad -v pyoad/tests/

after_success:
# ***reporting***
#  - junit2html junit.xml testrun.html  output is really not nice
  - ant -f ci_tools/generate-junit-html.xml  # generates the html for the test results. Actually we dont use it anymore
  - python ci_tools/generate-junit-badge.py  # generates the badge for the test results
  - codecov
  - pylint pyoad  # note that at the moment the report is simply lost, we dont transform the result into anything
# ***documentation***
  - mkdocs build -f ci_tools/mkdocs.yml
  - mv reports/junit site/
  # mkdocs gh-deploy requires special care :
  # ---grant the possibility to push on the repo---
  - openssl aes-256-cbc -K $encrypted_60e2bdb32373_key -iv $encrypted_60e2bdb32373_iv -in ci_tools/github_travis_rsa_pyoad.enc -out ci_tools/github_travis_rsa_pyoad -d
  - chmod 600 ci_tools/github_travis_rsa_pyoad
  - eval `ssh-agent -s`  # launch the authentication agent
  - ssh-add ci_tools/github_travis_rsa_pyoad  # register the key
  - git config user.name "Automatic Publish"
  - git config user.email "sylvain.marie@schneider-electric.com"
  - git remote add gh-remote "${GH_REF}";
  - git fetch gh-remote && git fetch gh-remote gh-pages:gh-pages;
  # push but only if this is not a build triggered by a pull request
  # note: here we use the --dirty flag so that mkdocs does not clean the additional reports that we copied in the site
  # only push for 3.5 to avoid confusion
  - if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [ "${TRAVIS_PYTHON_VERSION}" = "3.5" ]; then echo "Pushing to github"; PYTHONPATH=autoclass/ mkdocs gh-deploy -v --dirty -f ci_tools/mkdocs.yml --remote-name gh-remote; git push gh-remote gh-pages; fi;
#  - if [ "${TRAVIS_PULL_REQUEST}" = "false" ] && [ "${TRAVIS_PYTHON_VERSION}" = "3.5" ]; then echo "Pushing to github"; git push gh-remote gh-pages; fi;

deploy:
  provider: pypi
  user: "smarie"
  password:
    secure: "yMxIWciXGSylSmMSBnRI8bLdiKTSa1byrklbzFhd+ACPzFB3O7TFFsZhMdPrvXabNx9vBEXhps8Zocn3RPY7VqnLlSZJi8E+glmm4FwvX/S3fJ9PyYjwEbOJvMlMZFcI5PHYq8JKYQDySYwoR3YFkLqQwzyaoyW/5qQCFtnlZdIrGV25nyWDKdUjGgmhGy19BQOYD791Gy8y9kLBzVsaOoA0rKi4OdF3Oij4GbSNqYjWgmXNRNeedB7Kx2SU8K8RwJc7qZhbzK9N16opUsrN3tN94X1g/C6ETVP1G0yA2mkAsKxJXvfJuUIDbrMMsHEeam/F+GDUgaMHM/JmOFUnYtUY1kWhkebilEYwpvckp12yVpYqmxCKXAmAl9RLvI7qSIRZdjf5JCJRUNGPcgrWjCDUhAgjLyVVJk5tQdFGgNbTcUN7oeP8anZc1lcF35fieM/Tdj1zckYDyCT+hvvPUD3qmSshpl2KwOgKGV32hwOJMUNctPLJfklr6xYW/QwKxsjidGC1xYChm9GvlzgRQxpjTzRPrrZiZuBLq6YvGuBxnhTSEyqdbd3gSe5JDtGLSTjqReb+UKqc7UBjNrVfF7H8gjE5jTVi/g4tQbtGbt0g8iD/AO6pPvT+0xJR4iSI30424GzTdT9Z77Q7B9Sa+dN38KN4CChu53cx0FCs198="
  on:
    tags: true
    python: 3.5  #only one of the builds have to be deployed
#  server: https://test.pypi.org/legacy/
  distributions: "bdist_wheel"

matrix:
    fast_finish: true

notifications:
  email:
    on_success: never  # options: [always|never|change] default: always
