language: python

#cache: pip

python:
#  - "2.6"
#  - "2.7"
#  - "3.2"
#  - "3.3"
#  - "3.4"
  - "3.5"
#  - "3.5-dev" # 3.5 development branch
  - "3.6"
#  - "3.6-dev" # 3.6 development branch
#  - "3.7-dev" # 3.7 development branch
#  - "nightly" # currently points to 3.7-dev
# PyPy versions
#  - "pypy"  # PyPy2 2.5.0
#  - "pypy3" # Pypy3 2.4.0
#  - "pypy-5.3.1"
#

env:
  global:
  - GH_REF: git@github.com:smarie/python-object-as-daemon.git

before_install:
  - sudo apt-get install pandoc
  - sudo apt-get install ant
  - sudo apt-get install ant-optional  # for junitreports

install:
  - pip install -r ci_tools/requirements-setup.txt
  - pip install -r ci_tools/requirements-test.txt
  - pip install -r ci_tools/requirements-report.txt
  - pip install -r ci_tools/requirements-doc.txt
  - pip install codecov    # https://github.com/codecov/example-python. This is specific to travis integration
# - pip install coveralls  # this is an alternative to codecov
  - pip install .

script:
#  - coverage run tests.py
  - pytest --cov-report term-missing  --junitxml=junit.xml --cov=./pyoad -v pyoad/tests/

after_success:
# ***reporting***
#  - junit2html junit.xml testrun.html  output is really not nice
  - ant -f ci_tools/generate-junit-html.xml  # generates the html for the test results
  - python ci_tools/generate-junit-badge.py  # generates the badge for the test results
  - codecov
  - pylint pyoad  # note that at the moment the report is simply lost, we dont transform the result into anything
# ***documentation***
  - mkdocs build -f ci_tools/mkdocs.yml
  - mv reports/junit site/
  # mkdocs gh-deploy requires special care :
  # ---grant the possibility to push on the repo---
  - openssl aes-256-cbc -K $encrypted_60e2bdb32373_key -iv $encrypted_60e2bdb32373_iv -in ci_tools/github_travis_rsa_pyoad.enc -out ci_tools/github_travis_rsa_pyoad -d
  - chmod 600 ci_tools/github_travis_rsa_pyoad
  - eval `ssh-agent -s`  # launch the authentication agent
  - ssh-add ci_tools/github_travis_rsa_pyoad  # register the key
  - git config user.name "Automatic Publish"
  - git config user.email "sylvain.marie@schneider-electric.com"
  - git remote add gh-token "${GH_REF}";
  - git fetch gh-token && git fetch gh-token gh-pages:gh-pages;
  # push but only if this is not a build triggered by a pull request
  # note: here we use the --dirty flag so that mkdocs does not clean the additional reports that we copied in the site
  - if [ "${TRAVIS_PULL_REQUEST}" = "false" ]; then echo "Pushing to github"; PYTHONPATH=pyoad/ mkdocs gh-deploy -v --dirty -f ci_tools/mkdocs.yml --remote-name gh-token; git push gh-token gh-pages; fi;

deploy:
  provider: pypi
  user: "smarie"
  password:
    secure: "dxBhCnO9fnIbEIRUm00+q/lNZ33GzgH0wYZe28BvwP3uYbkh8Rp2UBjlDY2CQM51iMh+3Qu+yesqFKFKECBglliWGw0RU6R2UCvL4q1t4dHV92a0Fu5iu5EKSyrbUv5pm/EcT8FCOpgip6AR3nuOfQlheiWXILFCzpYHweGFdw+zR9QjvfEbA1LwgORZOq2j7YxkFt8+RAOMZFU2Olcf/2XwtoEnpAAGP2nIJnuMy8ZECYiaIzq9z0kycyECq53IndqMN1waZfwgYXJnWRpp8uRF5Y/7U4t/7DZCeZMnvjGYwBs6ZTLa2CDXoZDYbatt/6sdTWDqK5jdhiEZ0lUfE7LeTkkXOA5wjSr/y8F5CCcLEd5dsnYM3e9Ykx4ADZi6jjqe3BEuL7v55ZueOsgQw9XiI39bLS4sv78+hwJgjWljSUKUnqpyXn3i6id9kakmzsbXhyGy6C21/BBZAqU+Cw6oR4HZm7ZwQLNllDMoARLppUqO4AapRhGfihRhz+zIgRqyvgnd0uyzN6X5gxWHaDPEjXyHXZvZxeHlUGeAr0UUkLFnjl4hGKtBt9YnvLpYBkiIa37rUuTYkA8os0J3OlFS5bQTH4WN6YaffLl7il90FP9UkIzl8K0QTjiRMEynRq8p3X7sezBhoPQpt5BI8dpyMrRaDWP42nYgZjTdZao="
  on:
    tags: true
#  server: https://test.pypi.org/legacy/
  distributions: "bdist_wheel"

matrix:
    fast_finish: true

notifications:
  email:
    on_success: never  # options: [always|never|change] default: always
